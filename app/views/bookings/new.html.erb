<div class="container mt-5">
  <h1 class="text-center mb-4">
    <i class="bi bi-house-door-fill text-primary"></i> Reserve <%= @property.name %>
  </h1>

  <div class="row">
    <!-- Booking Form (70%) -->
    <div class="col-lg-7">
      <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
          <h4 class="mb-0">
            <i class="bi bi-pencil-fill"></i> Booking Form
          </h4>
        </div>
        <div class="card-body">
          <%= form_with(model: [@property, @booking], local: true) do |form| %>
            <h5 class="mb-4">
              <i class="bi bi-person-circle"></i> Guest Information
            </h5>

            <% if customer_signed_in? %>
              <div class="alert alert-info">
                <strong>Note:</strong> If you need to change your details, <%= link_to "click here", customers_profile_path, class: "text-primary" %>.
              </div>
            <% end %>

            <div class="input-group mb-3">
              <%= form.label :email, "Your Email", class: "form-label" %>
              <div class="input-group">
                <%= form.email_field :email, id: "customer-email-field", class: "form-control", placeholder: "Enter your email", value: (customer_signed_in? ? current_customer.email : ""), readonly: customer_signed_in? %>
                <button type="button" id="search-email-button" class="btn btn-primary" <%= customer_signed_in? ? "disabled" : "" %>>
                  Search
                </button>
              </div>
              <small class="form-text text-muted">If you already have an account, enter your email to prefill the fields.</small>
            </div>


            <div class="mb-3">
              <%= form.label :name, "Your Name", class: "form-label" %>
              <%= form.text_field :name, id: "customer-name-field", class: "form-control", placeholder: "Enter your name", value: (customer_signed_in? ? current_customer.name : ""), readonly: customer_signed_in? %>
            </div>
            <div class="mb-3">
              <%= form.label :phone, "Your Phone", class: "form-label" %>
              <%= form.text_field :phone, id: "customer-phone-field", class: "form-control", placeholder: "Enter your phone number", value: (customer_signed_in? ? current_customer.phone : ""), readonly: customer_signed_in? %>
            </div>
            <div class="mb-3">
              <%= form.label :address, "Your Address", class: "form-label" %>
              <%= form.text_area :address, id: "customer-address-field", class: "form-control", placeholder: "Enter your address", value: (customer_signed_in? ? current_customer.address : ""), readonly: customer_signed_in? %>
            </div>
            <div class="mb-3">
              <%= form.label :country, "Your Country", class: "form-label" %>
              <%= form.text_field :country, id: "customer-country-field", class: "form-control", placeholder: "Enter your country", value: (customer_signed_in? ? current_customer.country : ""), readonly: customer_signed_in? %>
            </div>
            <div class="mb-3">
              <%= form.label :city, "City", class: "form-label" %>
              <%= form.text_field :city, id: "customer-city-field", class: "form-control", placeholder: "Enter your city", value: (customer_signed_in? ? current_customer.city : ""), readonly: customer_signed_in? %>
            </div>
            <div class="mb-3">
              <%= form.label :zip_code, "Zip Code", class: "form-label" %>
              <%= form.text_field :zip_code, id: "customer-zip-code-field", class: "form-control", placeholder: "Enter your zip code", value: (customer_signed_in? ? current_customer.zip_code : ""), readonly: customer_signed_in? %>
            </div>

            <h5 class="mt-4 mb-4">
              <i class="bi bi-calendar-event"></i> Booking Details
            </h5>
            <div class="row">
              <div class="col-md-4 mb-3">
                <p><strong>Arrival Date:</strong> <%= @booking.start_date.present? ? @booking.start_date.strftime('%Y-%m-%d') : "Not specified" %></p>
              </div>
              <div class="col-md-4 mb-3">
                <p><strong>Departure Date:</strong> <%= @booking.end_date.present? ? @booking.end_date.strftime('%Y-%m-%d') : "Not specified" %></p>
              </div>
              <div class="col-md-4 mb-3">
                <p><strong>Number of Guests:</strong> <%= @booking.guest_count || "Not specified" %></p>
              </div>
            </div>

            <h5 class="mt-4 mb-4">
              <i class="bi bi-wallet2"></i> Payment Information
            </h5>
            <div class="mb-3">
              <%= form.label :payment_method_id, "Payment Method", class: "form-label" %>
              <%= form.collection_select :payment_method_id,
                                          current_admin.enabled_payment_methods.includes(:payment_method).map(&:payment_method),
                                          :id,
                                          :name,
                                          { prompt: "Select a Payment Method" },
                                          { class: "form-control", id: "payment-method-select" } %>
            </div>
            <div id="payment-method-description" class="text-muted mt-2"></div>
            <%= form.hidden_field :payment_method_description, value: "", id: "payment-method-description-field" %>

            <!-- Hidden fields to pass dates and guest count -->
            <%= form.hidden_field :start_date, value: @booking.start_date %>
            <%= form.hidden_field :end_date, value: @booking.end_date %>
            <%= form.hidden_field :guest_count, value: @booking.guest_count %>

            <div class="text-center mt-4">
            <%= form.submit "Reserve Now", class: "btn btn-primary btn-lg w-100", id: "default-submit-button" %>
            <button id="stripe-button" class="btn btn-primary btn-lg w-100 d-none">Pay with Stripe</button>
          </div>
          <% end %>
        </div>
      </div>
    </div>

    <!-- Price Breakdown (30%) -->
    <div class="col-lg-5">
  <div class="card shadow">
    <div class="card-header bg-info text-white">
      <h4>Price Breakdown</h4>
    </div>
    <div class="card-body">
      <% if @price_breakdown.present? %>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>Date</th>
              <th>Price (<%= currency_symbol(@settings&.currency || 'usd') %>)</th>
            </tr>
          </thead>
          <tbody>
            <% @price_breakdown.each do |entry| %>
              <tr>
                <td><%= entry[:date]&.strftime('%Y-%m-%d') %></td>
                <td><%= number_to_currency(entry[:price], unit: currency_symbol(@settings&.currency || 'usd')) %></td>
              </tr>
            <% end %>
          </tbody>
          <tfoot>
            <% if @discount.present? && @discount > 0 %>
              <tr>
                <td><strong>Discount Applied:</strong></td>
                <td><%= number_to_currency(@discount, unit: currency_symbol(@settings&.currency || 'usd')) %> (<%= @discount_type %>)</td>
              </tr>
            <% end %>
            <% if @tax_details.present? %>
              <% @tax_details.each do |tax| %>
                <tr>
                  <td><strong><%= tax[:name] %> (<%= tax[:rate_type].capitalize %> - <%= tax[:application_case].humanize %>):</strong></td>
                  <td><%= number_to_currency(tax[:amount], unit: currency_symbol(@settings&.currency || 'usd')) %></td>
                </tr>
              <% end %>
            <% end %>
            <tr>
              <td><strong>Total Before Discount:</strong></td>
              <td><%= number_to_currency(@base_total_price, unit: currency_symbol(@settings&.currency || 'usd')) %></td>
            </tr>
            <tr>
              <td><strong>Total Taxes:</strong></td>
              <td><%= number_to_currency(@total_taxes, unit: currency_symbol(@settings&.currency || 'usd')) %></td>
            </tr>
            <tr>
              <td><strong>Total Price:</strong></td>
              <td class="text-success"><%= number_to_currency(@total_price, unit: currency_symbol(@settings&.currency || 'usd')) %></td>
            </tr>
          </tfoot>
        </table>
      <% else %>
        <div id="price-breakdown-data">
          <p class="text-muted">No price breakdown available.</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

  </div>
</div>





<script>
document.addEventListener("DOMContentLoaded", () => {
  const emailField = document.getElementById("customer-email-field");
  const searchButton = document.getElementById("search-email-button");

  const fieldsToDisable = [
    "customer-name-field",
    "customer-phone-field",
    "customer-address-field",
    "customer-country-field",
    "customer-city-field",
    "customer-zip-code-field",
  ];

  const disableFields = (disable) => {
    fieldsToDisable.forEach((fieldId) => {
      const field = document.getElementById(fieldId);
      if (field) {
        field.disabled = disable;
      }
    });
  };

  const lookupCustomer = () => {
    const email = emailField.value.trim();
    if (email) {
      fetch(`/customers/lookup?email=${encodeURIComponent(email)}`, {
        headers: { Accept: "application/json" },
      })
        .then((response) => {
          if (response.ok) {
            return response.json();
          } else {
            throw new Error("Customer not found");
          }
        })
        .then((data) => {
          document.getElementById("customer-name-field").value = data.customer.name || "";
          document.getElementById("customer-phone-field").value = data.customer.phone || "";
          document.getElementById("customer-address-field").value = data.customer.address || "";
          document.getElementById("customer-country-field").value = data.customer.country || "";
          document.getElementById("customer-city-field").value = data.customer.city || "";
          document.getElementById("customer-zip-code-field").value = data.customer.zip_code || "";

          disableFields(true);
        })
        .catch((error) => {
          console.error(error.message);
          fieldsToDisable.forEach((fieldId) => {
            document.getElementById(fieldId).value = "";
          });
          disableFields(false);
        });
    }
  };

  searchButton.addEventListener("click", lookupCustomer);

  emailField.addEventListener("keydown", (event) => {
    if (event.key === "Enter") {
      event.preventDefault();
      lookupCustomer();
    }
  });
});


</script>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const paymentMethodSelect = document.getElementById("payment-method-select");
  const stripeButton = document.getElementById("stripe-button");
  const defaultSubmitButton = document.getElementById("default-submit-button");

  if (paymentMethodSelect) {
    paymentMethodSelect.addEventListener("change", () => {
      if (paymentMethodSelect.options[paymentMethodSelect.selectedIndex].text === "Stripe") {
        stripeButton.classList.remove("d-none");
        defaultSubmitButton.classList.add("d-none");
      } else {
        stripeButton.classList.add("d-none");
        defaultSubmitButton.classList.remove("d-none");
      }
    });
  }

  if (stripeButton) {
    stripeButton.addEventListener("click", async (e) => {
      e.preventDefault();

      try {
        const response = await fetch("<%= create_payment_intent_path %>", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": "<%= form_authenticity_token %>",
          },
          body: JSON.stringify({
            booking_id: <%= @booking.id %>,
            total_price: <%= @total_price %>,
          }),
        });

        if (!response.ok) throw new Error("Payment initiation failed.");
        const { sessionId } = await response.json();
        const stripe = Stripe("<%= ENV['STRIPE_PUBLISHABLE_KEY'] %>");
        await stripe.redirectToCheckout({ sessionId });
      } catch (error) {
        alert(error.message);
        console.error(error);
      }
    });
  }
});

</script>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const stripe = Stripe("<%= ENV['STRIPE_PUBLISHABLE_KEY'] %>");

  fetch("<%= create_payment_intent_path(@booking) %>", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "X-CSRF-Token": "<%= form_authenticity_token %>",
    },
  })
    .then((response) => response.json())
    .then((data) => {
      return stripe.redirectToCheckout({ sessionId: data.sessionId });
    })
    .catch((error) => {
      console.error("Stripe Error:", error);
      alert("Payment initiation failed. Please try again.");
    });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const paymentMethodSelect = document.getElementById("payment-method-select");
  const descriptionDiv = document.getElementById("payment-method-description");
  const descriptionField = document.getElementById("payment-method-description-field");

  // Object to map payment method IDs to descriptions (this will be embedded dynamically)
  const paymentMethodDescriptions = {
    <% PaymentMethod.all.each do |method| %>
      "<%= method.id %>": "<%= j method.description %>",
    <% end %>
  };

  paymentMethodSelect.addEventListener("change", () => {
    const selectedId = paymentMethodSelect.value;

    // Show the description or clear it if no payment method is selected
    if (selectedId && paymentMethodDescriptions[selectedId]) {
      descriptionDiv.innerText = paymentMethodDescriptions[selectedId];
      if (descriptionField) {
        descriptionField.value = paymentMethodDescriptions[selectedId];
      }
    } else {
      descriptionDiv.innerText = "";
      if (descriptionField) {
        descriptionField.value = "";
      }
    }
  });
});
</script>
