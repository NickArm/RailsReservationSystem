<div class="container mt-5">
  <h2>Manage Calendar for <%= @property.name %></h2>
  <div id="calendar" data-property-id="<%= @property.id %>"></div>
</div>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
<script src="/assets/javascripts/fullcalendar/core.js"></script>
<script src="/assets/javascripts/fullcalendar/daygrid.js"></script>
<script src="/assets/javascripts/fullcalendar/interaction.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  console.log("DOM fully loaded and parsed.");

  const calendarEl = document.getElementById("calendar");
  if (calendarEl) {
    console.log("Calendar element found:", calendarEl);
    const propertyId = calendarEl.dataset.propertyId;

    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

    const calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: "dayGridMonth",
      events: `/properties/${propertyId}/calendars`, // Fetch JSON events
      editable: true,
      selectable: true,
      select: function (info) {
        console.log("Selected range:", info.startStr, info.endStr);
        const price = prompt("Enter price for the selected range:");
        const status = confirm("Mark as available? Cancel for unavailable.") ? "open" : "closed";

        if (price) {
          fetch(`/properties/${propertyId}/calendars`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-CSRF-Token": csrfToken, // Add CSRF token here
            },
            body: JSON.stringify({
              start: info.startStr,
              end: info.endStr,
              price: price,
              status: status,
            }),
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
              }
              return response.json();
            })
            .then(() => {
              calendar.refetchEvents(); // Reload events without refreshing the page
            })
            .catch((error) => console.error("Error:", error));
        }
      },
      eventClick: function (info) {
        console.log("Event clicked:", info.event);
        if (confirm("Do you want to delete this event?")) {
          fetch(`/properties/${propertyId}/calendars/${info.event.id}`, {
            method: "DELETE",
            headers: {
              "X-CSRF-Token": csrfToken, // Add CSRF token here
            },
          })
            .then(() => {
              calendar.refetchEvents(); // Reload events after deletion
            })
            .catch((error) => console.error("Error:", error));
        }
      },
    });

    calendar.render();
    console.log("FullCalendar initialized!");
  } else {
    console.log("Calendar element not found.");
  }
});


</script>